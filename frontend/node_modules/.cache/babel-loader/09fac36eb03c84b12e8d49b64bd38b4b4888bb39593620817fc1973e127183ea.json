{"ast":null,"code":"var _jsxFileName = \"/Users/macos/development/gemini-chatbot/frontend/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login({\n  setToken\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleLogin = async () => {\n    if (!username || !password) {\n      setError(\"Kullanıcı adı ve şifre boş olamaz\");\n      return;\n    }\n    try {\n      const res = await axios.post(\"http://127.0.0.1:5000/login\", {\n        username,\n        password\n      });\n      localStorage.setItem(\"token\", res.data.token);\n      setToken(res.data.token);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Hata oluştu\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"E-posta\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\u015Eifre\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Giri\\u015F Yap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"4jNknrOuvZJHDfLk30xz3DpS4Uw=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","setToken","_s","username","setUsername","password","setPassword","error","setError","handleLogin","res","post","localStorage","setItem","data","token","err","_err$response","_err$response$data","response","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/macos/development/gemini-chatbot/frontend/src/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function Login({ setToken }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = async () => {\n    if (!username || !password) {\n      setError(\"Kullanıcı adı ve şifre boş olamaz\");\n      return;\n    }\n\n    try {\n      const res = await axios.post(\"http://127.0.0.1:5000/login\", { username, password });\n      localStorage.setItem(\"token\", res.data.token);\n      setToken(res.data.token);\n    } catch (err) {\n      setError(err.response?.data?.error || \"Hata oluştu\");\n    }\n  };\n\n  return (\n    <div className=\"auth-form\">\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n      <input\n        type=\"text\"\n        placeholder=\"E-posta\"\n        value={username}\n        onChange={e => setUsername(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Şifre\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n\n      <button onClick={handleLogin}>Giriş Yap</button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,KAAKA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACN,QAAQ,IAAI,CAACE,QAAQ,EAAE;MAC1BG,QAAQ,CAAC,mCAAmC,CAAC;MAC7C;IACF;IAEA,IAAI;MACF,MAAME,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,6BAA6B,EAAE;QAAER,QAAQ;QAAEE;MAAS,CAAC,CAAC;MACnFO,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC,KAAK,CAAC;MAC7Cd,QAAQ,CAACS,GAAG,CAACI,IAAI,CAACC,KAAK,CAAC;IAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZV,QAAQ,CAAC,EAAAS,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcH,IAAI,cAAAI,kBAAA,uBAAlBA,kBAAA,CAAoBX,KAAK,KAAI,aAAa,CAAC;IACtD;EACF,CAAC;EAED,oBACER,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvBd,KAAK,iBAAIR,OAAA;MAAGuB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAF,QAAA,EAAEd;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjD5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAE3B,QAAS;MAChB4B,QAAQ,EAAEC,CAAC,IAAI5B,WAAW,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF5B,OAAA;MACE6B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,YAAO;MACnBC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAEC,CAAC,IAAI1B,WAAW,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAEF5B,OAAA;MAAQmC,OAAO,EAAEzB,WAAY;MAAAY,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACzB,EAAA,CAxCuBF,KAAK;AAAAmC,EAAA,GAALnC,KAAK;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}